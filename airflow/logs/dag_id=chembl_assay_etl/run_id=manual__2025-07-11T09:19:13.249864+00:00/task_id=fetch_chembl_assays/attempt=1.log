[2025-07-11T11:19:16.992+0200] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2025-07-11T11:19:17.001+0200] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: chembl_assay_etl.fetch_chembl_assays manual__2025-07-11T09:19:13.249864+00:00 [queued]>
[2025-07-11T11:19:17.009+0200] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: chembl_assay_etl.fetch_chembl_assays manual__2025-07-11T09:19:13.249864+00:00 [queued]>
[2025-07-11T11:19:17.009+0200] {taskinstance.py:2306} INFO - Starting attempt 1 of 1
[2025-07-11T11:19:17.017+0200] {taskinstance.py:2330} INFO - Executing <Task(PythonOperator): fetch_chembl_assays> on 2025-07-11 09:19:13.249864+00:00
[2025-07-11T11:19:17.021+0200] {standard_task_runner.py:63} INFO - Started process 54933 to run task
[2025-07-11T11:19:17.023+0200] {standard_task_runner.py:90} INFO - Running: ['airflow', 'tasks', 'run', 'chembl_assay_etl', 'fetch_chembl_assays', 'manual__2025-07-11T09:19:13.249864+00:00', '--job-id', '9', '--raw', '--subdir', 'DAGS_FOLDER/chembl_assay_etl.py', '--cfg-path', '/tmp/tmpvovwont7']
[2025-07-11T11:19:17.024+0200] {standard_task_runner.py:91} INFO - Job 9: Subtask fetch_chembl_assays
[2025-07-11T11:19:17.043+0200] {task_command.py:426} INFO - Running <TaskInstance: chembl_assay_etl.fetch_chembl_assays manual__2025-07-11T09:19:13.249864+00:00 [running]> on host p14s
[2025-07-11T11:19:17.073+0200] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='florent' AIRFLOW_CTX_DAG_ID='chembl_assay_etl' AIRFLOW_CTX_TASK_ID='fetch_chembl_assays' AIRFLOW_CTX_EXECUTION_DATE='2025-07-11T09:19:13.249864+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-07-11T09:19:13.249864+00:00'
[2025-07-11T11:19:17.074+0200] {taskinstance.py:430} INFO - ::endgroup::
[2025-07-11T11:19:17.076+0200] {query_set.py:166} INFO - __getitem__, self.limits = (0, 20), k = slice(0, 20, None)
[2025-07-11T11:19:17.076+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.085+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.085+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 0)]
[2025-07-11T11:19:17.085+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.086+0200] {query_set.py:166} INFO - __getitem__, self.limits = (20, 40), k = slice(20, 40, None)
[2025-07-11T11:19:17.087+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.088+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.088+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 20)]
[2025-07-11T11:19:17.088+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.089+0200] {query_set.py:166} INFO - __getitem__, self.limits = (40, 60), k = slice(40, 60, None)
[2025-07-11T11:19:17.089+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.090+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.091+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 40)]
[2025-07-11T11:19:17.091+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.092+0200] {query_set.py:166} INFO - __getitem__, self.limits = (60, 80), k = slice(60, 80, None)
[2025-07-11T11:19:17.092+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.093+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.093+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 60)]
[2025-07-11T11:19:17.093+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.094+0200] {query_set.py:166} INFO - __getitem__, self.limits = (80, 100), k = slice(80, 100, None)
[2025-07-11T11:19:17.094+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.096+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.096+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 80)]
[2025-07-11T11:19:17.096+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.097+0200] {query_set.py:166} INFO - __getitem__, self.limits = (100, 120), k = slice(100, 120, None)
[2025-07-11T11:19:17.097+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.098+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.098+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 100)]
[2025-07-11T11:19:17.098+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.100+0200] {query_set.py:166} INFO - __getitem__, self.limits = (120, 140), k = slice(120, 140, None)
[2025-07-11T11:19:17.100+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.101+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.101+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 120)]
[2025-07-11T11:19:17.101+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.102+0200] {query_set.py:166} INFO - __getitem__, self.limits = (140, 160), k = slice(140, 160, None)
[2025-07-11T11:19:17.103+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.104+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.104+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 140)]
[2025-07-11T11:19:17.104+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.105+0200] {query_set.py:166} INFO - __getitem__, self.limits = (160, 180), k = slice(160, 180, None)
[2025-07-11T11:19:17.105+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.106+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.106+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 160)]
[2025-07-11T11:19:17.106+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.108+0200] {query_set.py:166} INFO - __getitem__, self.limits = (180, 200), k = slice(180, 200, None)
[2025-07-11T11:19:17.108+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.109+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.109+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 180)]
[2025-07-11T11:19:17.109+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.110+0200] {query_set.py:166} INFO - __getitem__, self.limits = (200, 220), k = slice(200, 220, None)
[2025-07-11T11:19:17.110+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.111+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.111+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 200)]
[2025-07-11T11:19:17.111+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.113+0200] {query_set.py:166} INFO - __getitem__, self.limits = (220, 240), k = slice(220, 240, None)
[2025-07-11T11:19:17.113+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.114+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.114+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 220)]
[2025-07-11T11:19:17.114+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.115+0200] {query_set.py:166} INFO - __getitem__, self.limits = (240, 260), k = slice(240, 260, None)
[2025-07-11T11:19:17.115+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.116+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.116+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 240)]
[2025-07-11T11:19:17.116+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.117+0200] {query_set.py:166} INFO - __getitem__, self.limits = (260, 280), k = slice(260, 280, None)
[2025-07-11T11:19:17.117+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.118+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.119+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 260)]
[2025-07-11T11:19:17.119+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.120+0200] {query_set.py:166} INFO - __getitem__, self.limits = (280, 300), k = slice(280, 300, None)
[2025-07-11T11:19:17.120+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.121+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.121+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 280)]
[2025-07-11T11:19:17.121+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.122+0200] {query_set.py:166} INFO - __getitem__, self.limits = (300, 320), k = slice(300, 320, None)
[2025-07-11T11:19:17.122+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.123+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.123+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 300)]
[2025-07-11T11:19:17.123+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.124+0200] {query_set.py:166} INFO - __getitem__, self.limits = (320, 340), k = slice(320, 340, None)
[2025-07-11T11:19:17.124+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.125+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.125+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 320)]
[2025-07-11T11:19:17.126+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.127+0200] {query_set.py:166} INFO - __getitem__, self.limits = (340, 360), k = slice(340, 360, None)
[2025-07-11T11:19:17.127+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.128+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.128+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 340)]
[2025-07-11T11:19:17.128+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.130+0200] {query_set.py:166} INFO - __getitem__, self.limits = (360, 380), k = slice(360, 380, None)
[2025-07-11T11:19:17.130+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.131+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.131+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 360)]
[2025-07-11T11:19:17.131+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.132+0200] {query_set.py:166} INFO - __getitem__, self.limits = (380, 400), k = slice(380, 400, None)
[2025-07-11T11:19:17.132+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.133+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.133+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 380)]
[2025-07-11T11:19:17.133+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.134+0200] {query_set.py:166} INFO - __getitem__, self.limits = (400, 420), k = slice(400, 420, None)
[2025-07-11T11:19:17.135+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.136+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.136+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 400)]
[2025-07-11T11:19:17.136+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.137+0200] {query_set.py:166} INFO - __getitem__, self.limits = (420, 440), k = slice(420, 440, None)
[2025-07-11T11:19:17.137+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.138+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.138+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 420)]
[2025-07-11T11:19:17.138+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.139+0200] {query_set.py:166} INFO - __getitem__, self.limits = (440, 460), k = slice(440, 460, None)
[2025-07-11T11:19:17.139+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.140+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.140+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 440)]
[2025-07-11T11:19:17.140+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.141+0200] {query_set.py:166} INFO - __getitem__, self.limits = (460, 480), k = slice(460, 480, None)
[2025-07-11T11:19:17.142+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.143+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.143+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 460)]
[2025-07-11T11:19:17.143+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.144+0200] {query_set.py:166} INFO - __getitem__, self.limits = (480, 500), k = slice(480, 500, None)
[2025-07-11T11:19:17.144+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.145+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.145+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 480)]
[2025-07-11T11:19:17.145+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.146+0200] {query_set.py:166} INFO - __getitem__, self.limits = (500, 520), k = slice(500, 520, None)
[2025-07-11T11:19:17.146+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.147+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.148+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 500)]
[2025-07-11T11:19:17.148+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.149+0200] {query_set.py:166} INFO - __getitem__, self.limits = (520, 540), k = slice(520, 540, None)
[2025-07-11T11:19:17.149+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.150+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.150+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 520)]
[2025-07-11T11:19:17.150+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.151+0200] {query_set.py:166} INFO - __getitem__, self.limits = (540, 560), k = slice(540, 560, None)
[2025-07-11T11:19:17.151+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.152+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.152+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 540)]
[2025-07-11T11:19:17.152+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.153+0200] {query_set.py:166} INFO - __getitem__, self.limits = (560, 580), k = slice(560, 580, None)
[2025-07-11T11:19:17.153+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.154+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.154+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 560)]
[2025-07-11T11:19:17.155+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.156+0200] {query_set.py:166} INFO - __getitem__, self.limits = (580, 600), k = slice(580, 600, None)
[2025-07-11T11:19:17.156+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.157+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.157+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 580)]
[2025-07-11T11:19:17.157+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.158+0200] {query_set.py:166} INFO - __getitem__, self.limits = (600, 620), k = slice(600, 620, None)
[2025-07-11T11:19:17.158+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.159+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.159+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 600)]
[2025-07-11T11:19:17.159+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.162+0200] {query_set.py:166} INFO - __getitem__, self.limits = (620, 640), k = slice(620, 640, None)
[2025-07-11T11:19:17.162+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.164+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.164+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 620)]
[2025-07-11T11:19:17.164+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.165+0200] {query_set.py:166} INFO - __getitem__, self.limits = (640, 660), k = slice(640, 660, None)
[2025-07-11T11:19:17.165+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.166+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.166+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 640)]
[2025-07-11T11:19:17.166+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.168+0200] {query_set.py:166} INFO - __getitem__, self.limits = (660, 680), k = slice(660, 680, None)
[2025-07-11T11:19:17.168+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.169+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.169+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 660)]
[2025-07-11T11:19:17.169+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.170+0200] {query_set.py:166} INFO - __getitem__, self.limits = (680, 700), k = slice(680, 700, None)
[2025-07-11T11:19:17.170+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.171+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.171+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 680)]
[2025-07-11T11:19:17.171+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.172+0200] {query_set.py:166} INFO - __getitem__, self.limits = (700, 720), k = slice(700, 720, None)
[2025-07-11T11:19:17.172+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.173+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.173+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 700)]
[2025-07-11T11:19:17.173+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.175+0200] {query_set.py:166} INFO - __getitem__, self.limits = (720, 740), k = slice(720, 740, None)
[2025-07-11T11:19:17.175+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.176+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.176+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 720)]
[2025-07-11T11:19:17.176+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.177+0200] {query_set.py:166} INFO - __getitem__, self.limits = (740, 760), k = slice(740, 760, None)
[2025-07-11T11:19:17.177+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.178+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.178+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 740)]
[2025-07-11T11:19:17.178+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.179+0200] {query_set.py:166} INFO - __getitem__, self.limits = (760, 780), k = slice(760, 780, None)
[2025-07-11T11:19:17.179+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.180+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.181+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 760)]
[2025-07-11T11:19:17.181+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.182+0200] {query_set.py:166} INFO - __getitem__, self.limits = (780, 800), k = slice(780, 800, None)
[2025-07-11T11:19:17.182+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.183+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.183+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 780)]
[2025-07-11T11:19:17.183+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.184+0200] {query_set.py:166} INFO - __getitem__, self.limits = (800, 820), k = slice(800, 820, None)
[2025-07-11T11:19:17.184+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.185+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.185+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 800)]
[2025-07-11T11:19:17.185+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.186+0200] {query_set.py:166} INFO - __getitem__, self.limits = (820, 840), k = slice(820, 840, None)
[2025-07-11T11:19:17.186+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.187+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.188+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 820)]
[2025-07-11T11:19:17.188+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.189+0200] {query_set.py:166} INFO - __getitem__, self.limits = (840, 860), k = slice(840, 860, None)
[2025-07-11T11:19:17.189+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.190+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.190+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 840)]
[2025-07-11T11:19:17.190+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.191+0200] {query_set.py:166} INFO - __getitem__, self.limits = (860, 880), k = slice(860, 880, None)
[2025-07-11T11:19:17.191+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.192+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.192+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 860)]
[2025-07-11T11:19:17.192+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.193+0200] {query_set.py:166} INFO - __getitem__, self.limits = (880, 900), k = slice(880, 900, None)
[2025-07-11T11:19:17.194+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.195+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.195+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 880)]
[2025-07-11T11:19:17.195+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.196+0200] {query_set.py:166} INFO - __getitem__, self.limits = (900, 920), k = slice(900, 920, None)
[2025-07-11T11:19:17.196+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.197+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.197+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 900)]
[2025-07-11T11:19:17.197+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.198+0200] {query_set.py:166} INFO - __getitem__, self.limits = (920, 940), k = slice(920, 940, None)
[2025-07-11T11:19:17.198+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.199+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.199+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 920)]
[2025-07-11T11:19:17.199+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.201+0200] {query_set.py:166} INFO - __getitem__, self.limits = (940, 960), k = slice(940, 960, None)
[2025-07-11T11:19:17.201+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.202+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.202+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 940)]
[2025-07-11T11:19:17.202+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.203+0200] {query_set.py:166} INFO - __getitem__, self.limits = (960, 980), k = slice(960, 980, None)
[2025-07-11T11:19:17.203+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.204+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.204+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 960)]
[2025-07-11T11:19:17.204+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.205+0200] {query_set.py:166} INFO - __getitem__, self.limits = (980, 1000), k = slice(980, 1000, None)
[2025-07-11T11:19:17.205+0200] {url_query.py:76} INFO - resetting chunk
[2025-07-11T11:19:17.206+0200] {url_query.py:390} INFO - https://www.ebi.ac.uk/chembl/api/data/assay.json
[2025-07-11T11:19:17.206+0200] {url_query.py:391} INFO - [('assay_type', 'A'), ('assay_organism__iexact', 'Homo%20sapiens'), ('only', ['assay_type', 'description', 'assay_chembl_id', 'assay_organism']), ('limit', 20), ('offset', 980)]
[2025-07-11T11:19:17.206+0200] {url_query.py:392} INFO - From cache: True
[2025-07-11T11:19:17.209+0200] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2025-07-11T11:19:17.209+0200] {taskinstance.py:2905} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/florent/Programs/anaconda3/envs/airflow_etl/lib/python3.11/site-packages/airflow/models/taskinstance.py", line 465, in _execute_task
    result = _execute_callable(context=context, **execute_callable_kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/florent/Programs/anaconda3/envs/airflow_etl/lib/python3.11/site-packages/airflow/models/taskinstance.py", line 432, in _execute_callable
    return execute_callable(context=context, **execute_callable_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/florent/Programs/anaconda3/envs/airflow_etl/lib/python3.11/site-packages/airflow/models/baseoperator.py", line 400, in wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/florent/Programs/anaconda3/envs/airflow_etl/lib/python3.11/site-packages/airflow/operators/python.py", line 235, in execute
    return_value = self.execute_callable()
                   ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/florent/Programs/anaconda3/envs/airflow_etl/lib/python3.11/site-packages/airflow/operators/python.py", line 252, in execute_callable
    return self.python_callable(*self.op_args, **self.op_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/florent/Documents/projects/mol_harvester/airflow/dags/chembl_assay_etl.py", line 30, in fetch_chembl_assays
    df.to_csv('~/Document/projects/mol_harvester/data/staging/test_etl.csv', index=False)
  File "/home/florent/Programs/anaconda3/envs/airflow_etl/lib/python3.11/site-packages/pandas/util/_decorators.py", line 333, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/florent/Programs/anaconda3/envs/airflow_etl/lib/python3.11/site-packages/pandas/core/generic.py", line 3986, in to_csv
    return DataFrameRenderer(formatter).to_csv(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/florent/Programs/anaconda3/envs/airflow_etl/lib/python3.11/site-packages/pandas/io/formats/format.py", line 1014, in to_csv
    csv_formatter.save()
  File "/home/florent/Programs/anaconda3/envs/airflow_etl/lib/python3.11/site-packages/pandas/io/formats/csvs.py", line 251, in save
    with get_handle(
         ^^^^^^^^^^^
  File "/home/florent/Programs/anaconda3/envs/airflow_etl/lib/python3.11/site-packages/pandas/io/common.py", line 749, in get_handle
    check_parent_directory(str(handle))
  File "/home/florent/Programs/anaconda3/envs/airflow_etl/lib/python3.11/site-packages/pandas/io/common.py", line 616, in check_parent_directory
    raise OSError(rf"Cannot save file into a non-existent directory: '{parent}'")
OSError: Cannot save file into a non-existent directory: '/home/florent/Document/projects/mol_harvester/data/staging'
[2025-07-11T11:19:17.213+0200] {taskinstance.py:1206} INFO - Marking task as FAILED. dag_id=chembl_assay_etl, task_id=fetch_chembl_assays, run_id=manual__2025-07-11T09:19:13.249864+00:00, execution_date=20250711T091913, start_date=20250711T091917, end_date=20250711T091917
[2025-07-11T11:19:17.219+0200] {standard_task_runner.py:110} ERROR - Failed to execute job 9 for task fetch_chembl_assays (Cannot save file into a non-existent directory: '/home/florent/Document/projects/mol_harvester/data/staging'; 54933)
[2025-07-11T11:19:17.234+0200] {local_task_job_runner.py:240} INFO - Task exited with return code 1
[2025-07-11T11:19:17.244+0200] {taskinstance.py:3498} INFO - 0 downstream tasks scheduled from follow-on schedule check
[2025-07-11T11:19:17.244+0200] {local_task_job_runner.py:222} INFO - ::endgroup::
